{"version":3,"sources":["webpack:///./routes/google-scholar-scraper/style.css","webpack:///./routes/google-scholar-scraper/index.js"],"names":["GoogleScholarScraper","_scholarData$articles","_scholarData$articles2","scholarData","setScholarData","useState","isLoading","setIsLoading","error","setError","serverUrl","setServerUrl","useEffect","fetchScholarData","async","response","fetch","ok","errorData","json","Error","status","data","Object","keys","length","console","message","h","class","style","onClick","method","headers","disabled","name","affiliation","hIndex","i10Index","citations","Date","lastUpdated","toLocaleString","articles","map","article","index","key","href","link","target","rel","title","authors","publication","year"],"mappings":"8HACe,EAAoB,0BAApB,EAA6D,sBAA7D,EAAmG,uBAAnG,EAAkI,eAAlI,EAA2J,iBAA3J,EAAqL,gBCsGrLA,UAnGcA,KAAM,IAAAC,EAAAC,EACjC,MAAOC,EAAaC,GAAkBC,YAAS,OACxCC,EAAWC,GAAgBF,aAAS,IACpCG,EAAOC,GAAYJ,YAAS,OAC5BK,EAAWC,GAAgBN,YAAS,yBAE3CO,aAAU,KACRC,GAAkB,GACjB,IAEH,MAAMA,EAAmBC,UACvBP,GAAa,GACbE,EAAS,MACT,IACE,MAAMM,QAAiBC,MAAM,GAAGN,0BAChC,IAAKK,EAASE,GAAI,CAChB,MAAMC,QAAkBH,EAASI,OACjC,MAAM,IAAIC,MAAM,uBAAuBL,EAASM,oBAAoBH,EAAUV,QAChF,CACA,MAAMc,QAAaP,EAASI,OACK,IAA7BI,OAAOC,KAAKF,GAAMG,OACpBhB,EAAS,0DAETL,EAAekB,EAEnB,CAAE,MAAOd,GACPkB,QAAQlB,MAAM,sCAAuCA,GACrDC,EAAS,wCAAwCD,EAAMmB,UACzD,CACApB,GAAa,EAAM,EA0BrB,OACEqB,YAAA,OAAKC,MAAOC,GACVF,YAAA,UAAI,uBACJA,YAAA,UAAQG,QA1BSjB,UACnBP,GAAa,GACbE,EAAS,MACT,IACE,MAAMM,QAAiBC,MAAM,GAAGN,8BAAuC,CACrEsB,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAGpB,IAAKlB,EAASE,GAAI,CAChB,MAAMC,QAAkBH,EAASI,OACjC,MAAM,IAAIC,MAAM,uBAAuBL,EAASM,oBAAoBH,EAAUV,QAChF,CACA,MAAMc,QAAaP,EAASI,OAC5Bf,EAAekB,EACjB,CAAE,MAAOd,GACPkB,QAAQlB,MAAM,iCAAkCA,GAChDC,EAAS,oCAAoCD,EAAMmB,UACrD,CACApB,GAAa,EAAM,EAMc2B,SAAU5B,EAAWuB,MAAOC,GACxDxB,EAAY,cAAgB,8BAE/BsB,YAAA,UAAQG,QAASlB,EAAkBqB,SAAU5B,EAAWuB,MAAOC,GAAqB,0BAGnFtB,GAASoB,YAAA,OAAKC,MAAOC,GAActB,GACnCF,GAAasB,YAAA,OAAKC,MAAOC,GAAe,2CACxC3B,GACCyB,YAAA,OAAKC,MAAOC,GACVF,YAAA,UAAI,iBACJA,YAAA,SAAG,SAAOzB,EAAYgC,MACtBP,YAAA,SAAG,gBAAczB,EAAYiC,aAC7BR,YAAA,SAAG,YAAUzB,EAAYkC,QACzBT,YAAA,SAAG,cAAYzB,EAAYmC,UAC3BV,YAAA,SAAG,oBAAkBzB,EAAYoC,WACjCX,YAAA,SAAG,iBAAe,IAAIY,KAAKrC,EAAYsC,aAAaC,kBACpDd,YAAA,UAAI,cAA+B,QAApB3B,EAAAE,EAAYwC,gBAAQ,IAAA1C,OAAA,EAApBA,EAAsBwB,SAAU,EAAE,MACjDG,YAAA,WACuB,QAApB1B,EAAAC,EAAYwC,gBAAQ,IAAAzC,OAAA,EAApBA,EAAsB0C,KAAI,CAACC,EAASC,IACnClB,YAAA,MAAImB,IAAKD,GACPlB,YAAA,cACEA,YAAA,KAAGoB,KAAMH,EAAQI,KAAMC,OAAO,SAASC,IAAI,uBACxCN,EAAQO,QAGbxB,YAAA,WACCiB,EAAQQ,QACTzB,YAAA,WACCiB,EAAQS,YAAY,KAAGT,EAAQU,KAAK,IACrC3B,YAAA,WAAM,cACMiB,EAAQN,eAElBX,YAAA,UAAI,2BAIZ,C","file":"route-google-scholar-scraper.chunk.5cfe1.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"scraperContainer\":\"scraperContainer__cMV1G\",\"scrapeButton\":\"scrapeButton__DsaZV\",\"refreshButton\":\"refreshButton__TQ1fo\",\"error\":\"error__FfBKN\",\"loading\":\"loading__AT0sn\",\"result\":\"result__ayCcW\"};","import { h } from \"preact\"\nimport { useState, useEffect } from \"preact/hooks\"\nimport style from \"./style.css\"\n\nconst GoogleScholarScraper = () => {\n  const [scholarData, setScholarData] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [serverUrl, setServerUrl] = useState(\"http://localhost:3000\")\n\n  useEffect(() => {\n    fetchScholarData()\n  }, [])\n\n  const fetchScholarData = async () => {\n    setIsLoading(true)\n    setError(null)\n    try {\n      const response = await fetch(`${serverUrl}/api/get-scholar-data`)\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.error}`)\n      }\n      const data = await response.json()\n      if (Object.keys(data).length === 0) {\n        setError(\"No data available. Please scrape Google Scholar first.\")\n      } else {\n        setScholarData(data)\n      }\n    } catch (error) {\n      console.error(\"Error fetching Google Scholar data:\", error)\n      setError(`Failed to fetch Google Scholar data: ${error.message}`)\n    }\n    setIsLoading(false)\n  }\n\n  const handleScrape = async () => {\n    setIsLoading(true)\n    setError(null)\n    try {\n      const response = await fetch(`${serverUrl}/api/scrape-google-scholar`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorData.error}`)\n      }\n      const data = await response.json()\n      setScholarData(data)\n    } catch (error) {\n      console.error(\"Error scraping Google Scholar:\", error)\n      setError(`Failed to scrape Google Scholar: ${error.message}`)\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <div class={style.scraperContainer}>\n      <h2>Google Scholar Data</h2>\n      <button onClick={handleScrape} disabled={isLoading} class={style.scrapeButton}>\n        {isLoading ? \"Updating...\" : \"Update Google Scholar Data\"}\n      </button>\n      <button onClick={fetchScholarData} disabled={isLoading} class={style.refreshButton}>\n        Refresh Data from File\n      </button>\n      {error && <div class={style.error}>{error}</div>}\n      {isLoading && <div class={style.loading}>Loading... This may take a few minutes.</div>}\n      {scholarData && (\n        <div class={style.result}>\n          <h3>Scholar Data:</h3>\n          <p>Name: {scholarData.name}</p>\n          <p>Affiliation: {scholarData.affiliation}</p>\n          <p>H-index: {scholarData.hIndex}</p>\n          <p>i10-index: {scholarData.i10Index}</p>\n          <p>Total Citations: {scholarData.citations}</p>\n          <p>Last Updated: {new Date(scholarData.lastUpdated).toLocaleString()}</p>\n          <h4>Articles ({scholarData.articles?.length || 0}):</h4>\n          <ul>\n            {scholarData.articles?.map((article, index) => (\n              <li key={index}>\n                <strong>\n                  <a href={article.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {article.title}\n                  </a>\n                </strong>\n                <br />\n                {article.authors}\n                <br />\n                {article.publication} ({article.year})\n                <br />\n                Citations: {article.citations}\n              </li>\n            )) || <li>No articles available</li>}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default GoogleScholarScraper\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}